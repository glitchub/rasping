#!/usr/bin/python3 -u
#Note unbuffered output

import os, sys
from fnmatch import fnmatch
from time import sleep
from getopt import getopt
import subprocess

usage="""
Usage:

    autovlan [options] pattern [... pattern] vlanid

Given one or more glob-style network interface name patterns and a vlan id 1 to
4094, create a vlan for each matching interface.

Options are:

    -x pattern - interfaces that match this patterm will always be ignored. Can
    be used multiple times.
"""

exclude={'lo'}
include=set()

try:
    opts, args = getopt(sys.argv[1:],"x:")
    if len(args) < 2: raise Exception("Must specify at least one pattern and a vlan ID.")
    include.update(args[:-1])
    vlanid=args[-1]
    assert 1 <= int(vlanid) <= 4094
    for opt, arg in opts:
        if opt == "-x": exclude.add(arg)
except Exception as e:
    print (str(e), usage, file=sys.stderr)
    quit(1)

# return list of network interfaces
def interfaces(): return os.listdir('/sys/class/net')

# execute the 'ip' command with given command line
def ip(cmd): return subprocess.call(["ip"] + cmd.split())

# return true if string s matches any listed glob
def matches(s, globs):
    for g in globs:
        if fnmatch(s, g):
            return True
    return False

print("Applying vlan ID %s to interfaces that match %s but not %s" % (vlanid, str(include)[1:-1], str(exclude)[1:-1]))

ignore=[] # interfaces that failed to add properly

while True:
    current=interfaces()

    # unignore unplugged interfaces
    for i in set(ignore) - set(current): ignore.remove(i)

    for i in current:
        if matches(i, include) and not matches(i, exclude) and i not in ignore:
            v="vlan.%s" % i
            if v not in current:
                print("Creating vlan %s" % v)
                # first we have to up the real interface, then the vlan
                if ip("link set dev %s up" % i):
                    print("Could not bring %s up, ignoring it" % i)
                    ignore.append(i)
                elif ip("link add link %s name %s type vlan id %s" % (i, v, vlanid)):
                    print("Could not create %s, ignoring %s" % (v, i))
                    ignore.append(i)
    sleep(1)

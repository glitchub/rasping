#!/usr/bin/python3 -u
#Note unbuffered output

import os, sys
from fnmatch import fnmatch
from time import sleep
from getopt import getopt
import subprocess

usage="""
Usage:

    autovlan [options] pattern [... pattern] vlanid

Given one or more glob-style network interface name patterns and a vlan id 1 to
4094, create a vlan for each matching interface.

Options are:

    -x pattern - interfaces that match this patterm will always be ignored. Can
    be used multiple times.
"""

reject={'lo'}
accept=set()

try:
    opts, args = getopt(sys.argv[1:],"x:")
    if len(args) < 2: raise Exception("Must specify at least one pattern and a vlan ID.")
    accept.update(args[:-1])
    vlanid=args[-1]
    assert 1 <= int(vlanid) <= 4094
    for opt, arg in opts:
        if opt == "-x": reject.add(arg)
except Exception as e:
    print (str(e), usage, file=sys.stderr)
    quit(1)

# execute the 'ip' command with given command line
def ip(cmd): return subprocess.call(["ip"] + cmd.split())

print("Applying vlan ID %s to interfaces that match %s but not %s" % (vlanid, str(accept)[1:-1], str(reject)[1:-1]))

ignore=[] # interfaces that failed to add properly

nl=netlink(accept=accept, reject=reject)
nl.dump()

for event in nl.read():

    if not event: continue # ignore end of dump

    ifname=event["ifname"]

    if not event["attached"]:
        # interface is gone, forget we ignored it
        # note the vlan will go away when the interface does
        try: ignore.remove(ifname)
        except KeyError: pass
    elif iface not in ignore:
        v="vlan.%s" % iface
        if v not in interfaces():
            print("Creating vlan %s" % v)
            if not event["up"]:
                # up the interface first
                if ip("link set dev %s up" % iface):
                    print("Could not bring %s up, ignoring it" % iface)
                    ignore.append(i)
            if ip("link add link %s name %s type vlan id %s" % (iface, v, vlanid)):
                print("Could not create %s, ignoring %s" % (v, iface))
                ignore.append(iface)

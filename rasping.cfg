# Raspberry PI NAT Gateway configuration

# By default, connection to the WAN will be via the Pi's built-in ethernet, and
# connection to the LAN is via one or more USB ethernet dongles.

# This is the gateway address to be provided on the LAN. It is mandatory.  You
# must not specify an address range that is in use farther upstream.  The
# subnet is hard coded to 255.255.255.0 (/24).
LAN_IP = 192.168.111.1

# This is the range of IP addresses to assign via DHCP on the LAN, in the form
# "FIRST_IP,LAST_IP". Comment it out to disable DHCP. The addresses must be in
# the same /24 netblock as the LAN_IP but the range must not include LAN_IP.
DHCP_RANGE = 192.168.111.2,192.168.111.128

# This is a space-separated list of TCP ports to allow on the WAN interface.
# Comment it out to block all WAN ports.  For example, enabling port 22 will
# allow SSH access from the WAN (but don't do that unless you've set a good
# password for user 'pi').
# UNBLOCK = 22

# This is a space-separated list of TCP ports to be forwarded to other hosts,
# each element is in the form "PORT=DESTIP:DESTPORT". Ports will be forwarded
# from WAN or LAN, but you must explicitly unblock incoming WAN ports above.
# Note ports 32768 thru 60999 are reserved by the kernel and should be avoided.
# FORWARD = 61022=192.168.111.10:22 61080=172.16.128.254:80 61443=172.16.128.254:443

# If PINGABLE is set (to anything), then the Pi will respond to ping on the WAN
# interface. Usually you don't want this.
# PINGABLE = yes

# If these are defined then connection to WAN will be via WiFi STA, and the
# built-in ethernet will be bridged to the LAN. COUNTRY must also be set.  The
# SSID and PASSPHRASE are passed to wpa_supplicant exactly as given, except "$"
# must be entered as "$$" and leading/trailing whitespace is removed.  Normally
# they should be enclosed in double quotes, but see wpa_supplicant
# documentation for other formatting options.
# WAN_SSID = "My router"
# WAN_PASSPHRASE = "My router's password"

# If these are defined then a WiFi AP will be bridged to the LAN. COUNTRY must
# also be set. The SSID and PASSPHRASE are passed to hostapd exactly as given,
# except "$" must be entered as "$$", and leading/trailing whitespace is
# removed. Note these are NOT enclosed in quotes.
# LAN_SSID = Raspberry Pi NAT Gateway
# LAN_PASSPHRASE = Change this passphrase!
# LAN_CHANNEL = 2 # See https://en.wikipedia.org/wiki/List_of_WLAN_channels

# This must be defined for WiFi operation.
# COUNTRY = US # See https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes.

# Normally the WAN interface gets its address via DHCP. To give it a static IP
# instead, define the IP address, gateway, and DNS server here.
# WAN_IP = 172.16.128.240/24
# WAN_GW = 172.16.128.1
# WAN_DNS = 8.8.8.8

# If this is set to a value from to 4094, then VLAN tagging with that ID will
# be applied to the first ethernet interface added to the bridge, I.E. the
# built-in "eth0" if WAN_SSID is set, otherwise whichever ethernet dongle
# claims "eth1".  In practice this means you should only attach one ethernet
# device when enabling VLAN.
# LAN_VLAN=1

# All these params can also be passed on the make command line, overriding the
# settings here, E.G.:
#
#    make LAN_IP=172.16.128.1 DHCP_RANGE= UNBLOCK=22

# As a special case, if "LAN_IP=no" then discrete LAN operation is disabled,
# and all interfaces are bridged to the WAN. NAT is not used (and "Raspberry Pi
# NAT Gateway" becomes a misnomer). LAN_SSID can still be defined, but WAN_SSID
# cannot.

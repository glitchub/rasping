# Raspberry PI NAT Gateway configuration

# This is the gateway address to be provided on the LAN. It is mandatory.  You
# must not specify an address range that is in use farther upstream.  The
# subnet is hard coded to 255.255.255.0 (/24).
LAN_IP = 192.168.111.1

# This is the last octets of range of IP addresses to assign via DHCP on the
# LAN, in the form "FIRST_IP,LAST_IP". Comment it out to disable DHCP. The
# addresses must be in the same /24 netblock as the LAN_IP but the range must
# not include LAN_IP.
DHCP_RANGE = 2,128

# This is a space-separated list of TCP ports to allow on the WAN interface.
# Comment it out to block all WAN ports.  For example, enabling port 22 will
# allow SSH access from the WAN (but don't do that unless you've set a good
# password for user 'pi').
# UNBLOCK = 22

# This is a space-separated list of TCP ports to be forwarded to other hosts,
# each element is in the form "PORT=DESTIP:DESTPORT". Ports will be forwarded
# from WAN or LAN, but you must explicitly unblock incoming WAN ports above.
# Note ports 32768 thru 60999 are reserved by the kernel and should be avoided.
# FORWARD = 61022=192.168.111.10:22 61080=172.16.128.254:80 61443=172.16.128.254:443

# This is the WLAN SSID, passphrase and 802.11g 2.4Ghz channel. If defined then
# you'll be able to connect to the LAN via WiFi and use of an ethernet USB
# dongle is optional. Comment out to disable wifi, and only use the ethernet
# USB dongle.
# LAN_SSID = Raspberry Pi NAT Gateway
# LAN_PASSPHRASE = change this passphrase!
# LAN_CHANNEL = 2

# The built in ethernet connects to the WAN, and normally gets an address via
# DHCP. To give it a static IP insteade, define the IP address, gateway, and
# DNS server here.
# WAN_IP = 172.16.128.240/24
# WAN_GW = 172.16.128.1
# WAN_DNS = 8.8.8.8

# All these params can also be passed on the make command line, EG:
#
#    make LAN_IP=172.16.128.1 DHCP_RANGE= UNBLOCK=22

# NOTE: If you want to change the configuration after installing, you must
# FIRST 'make uninstall' with the original configuration, THEN change the
# configuration, THEN 'make install' to install the new configuration.
# Otherwise the install may fail and leave the system in a weird state, and
# you'll have to rebuild the system from scratch.
